- name: Update apt cache
  apt:
    update_cache: yes
  become: true

- name: Install snapd and curl
  apt:
    name:
      - snapd
      - curl
    state: present
  become: true

- name: Ensure snapd.socket is enabled and started
  systemd:
    name: snapd.socket
    enabled: yes
    state: started
  become: true

- name: Wait a few seconds for snap to settle
  pause:
    seconds: 10

- name: Check if /snap already exists
  stat:
    path: /snap
  register: snap_path

- name: Create /snap symlink only if it doesn't exist
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    state: link
  when: snap_path.stat.exists == false
  become: true

- name: Ensure setuptools is installed
  apt:
    name: python3-setuptools
    state: present
  become: true

- name: Ensure python3-pip is installed
  apt:
    name: python3-pip
    state: present
    update_cache: true
  become: true

- name: Install Kubernetes Python module (for system pip3)
  pip:
    name: kubernetes
    executable: pip3
  become: true

# ✅ New logic starts here:

- name: Set detected Python interpreter path as a variable
  set_fact:
    detected_python: "{{ ansible_python_interpreter }}"

- name: Install Kubernetes module for detected Python
  pip:
    name: kubernetes
    executable: "{{ detected_python | regex_replace('bin/python3.*$', 'bin/pip3') }}"
  become: true

# ✅ End of new logic

- name: Download k9s tarball from GitHub
  get_url:
    url: https://github.com/derailed/k9s/releases/download/v0.27.4/k9s_Linux_amd64.tar.gz
    dest: /tmp/k9s.tar.gz

- name: Extract k9s binary
  unarchive:
    src: /tmp/k9s.tar.gz
    dest: /tmp
    remote_src: yes

- name: Move k9s binary to /usr/local/bin
  copy:
    src: /tmp/k9s
    dest: /usr/local/bin/k9s
    mode: '0755'
    remote_src: yes

- name: Clean up downloaded k9s archive
  file:
    path: /tmp/k9s.tar.gz
    state: absent
